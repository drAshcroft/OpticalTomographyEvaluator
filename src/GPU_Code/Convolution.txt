__kernel void rotateConvolution(  
		__global float  * imageOut,
		__constant float  * pImpulse,
		const uint  impulseWidth,
		const uint2  inputDimensions,
		__global float  * imageIn
)
{
    uint tid   = get_global_id(0);
    
    uint width  = inputDimensions.x;
    uint height = inputDimensions.y;
    
    uint x = tid%width;
    uint y = tid/width;
    
    uint ImpulseIND=0;
    int StartJ = y -impulseWidth/2 ;
    int EndJ = y +impulseWidth/2 ;

    if (StartJ <0)
    {
      StartJ=0;
      ImpulseIND=impulseWidth/2- y;
    }
    if (EndJ >height) EndJ=height-1;

    uint memIND=x + StartJ*width;
 
    float sum =0;
    for (int j = StartJ; j <EndJ; j++)
    {        
         sum = sum+ imageIn[memIND]* pImpulse[ImpulseIND];
		 ImpulseIND++; 
         memIND +=width;
    }

    uint outid = x*width+y;
    imageOut[outid]=sum;
}
